---
name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  codespell:
    name: Check for spelling mistakes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Codespell
        uses: codespell-project/actions-codespell@v2

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check format
        run: cargo fmt --check
      - name: Clippy
        run: cargo clippy --all-features

  docs:
    name: Build documentation
    needs:
      - codespell
      - lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build documentation
        run: cargo doc --all-features

  build-linux:
    needs:
      - lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features: [ [ ], [ "--all-features" ] ]
    steps:
      - uses: actions/checkout@v4
      - name: Clippy
        run: cargo clippy ${{ join(matrix.features, ' ') }}
      - name: Build
        run: cargo build --verbose ${{ join(matrix.features, ' ') }}
      - name: Run tests
        run: cargo test --tests --verbose ${{ join(matrix.features, ' ') }}
      - name: Run doctests
        run: cargo test --doc --verbose ${{ join(matrix.features, ' ') }}

  build-others:
    needs:
      - build-linux
      - docs
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ windows-latest, macos-latest ]
        features: [ [ ], [ "--all-features" ] ]
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: cargo build --verbose ${{ join(matrix.features, ' ') }}
      - name: Run tests
        run: cargo test --tests --verbose ${{ join(matrix.features, ' ') }}
      - name: Run doctests
        run: cargo test --doc --verbose ${{ join(matrix.features, ' ') }}
